# NNMusic - README

## 项目简介
NNMusic 是一个音乐播放应用，允许用户登录、浏览和播放歌曲。本项目支持查看专辑、艺术家、歌曲，同时提供播放功能。用户界面简洁，易于操作，适用于提供基础音乐播放体验。

## 数据库结构
### 数据库表说明
- **用户表 (Users)**: 存储用户信息，包括用户名和密码。
- **歌曲表 (Songs)**: 包括歌曲名称、艺术家、专辑信息、曲风和音频文件链接。
- **艺术家表 (Artists)**: 记录艺术家姓名、简介和国籍。
- **专辑表 (Albums)**: 包含专辑名称和相关艺术家信息。
- **播放列表表 (Playlists)**: 存储用户自定义的播放列表信息。
- **播放列表歌曲关系表 (PlaylistSongs)**: 关联播放列表和歌曲。

### 数据库操作
- 创建表
- 插入和验证用户数据
- 获取和插入艺术家、专辑、歌曲数据
- 清空所有表数据

## 网页基本架构
### 主要页面功能
- **登录页面**: 提供用户登录，未注册用户将自动注册。
- **主页**: 展示推荐的专辑、艺术家和歌曲。
- **专辑页面**: 显示所有专辑和详细信息。
- **艺术家页面**: 显示所有艺术家和详细信息。
- **歌曲页面**: 列出所有歌曲，提供播放功能。

### 技术细节
- 前端使用 HTML 和 CSS 设计简约风格。
- 后端使用 Flask 框架处理请求和数据。
- 数据库操作通过 psycopg2 进行管理。

## 文件结构
```
NNMusic/
├── app.py                 # Flask 应用主程序
├── database.py            # 数据库操作定义
├── templates/             # 存放 HTML 模板
│   ├── login.html         # 登录页面
│   ├── home.html          # 主页
│   ├── albums.html        # 专辑页面
│   ├── artists.html       # 艺术家页面
│   ├── songs.html         # 歌曲页面
│   └── play.html          # 播放页面
├── static/                # 存放静态文件，如图片和 CSS
│   └── images/            # 图片资源
    └── audio/                 # 音频文件存放位置
        └── sample.mp3         # 示例音频文件
```

## 测试连接
- 数据库连接测试通过指定参数，保证应用可以正确连接和操作数据库。
